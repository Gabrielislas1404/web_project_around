!function(){"use strict";var e={p:""},t={formSelector:".popup__content",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonclass:".popup__save-button:disabled",inputErrorClass:".popup__input:invalid",errorClass:".popup__line"};function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,o(r.key),r)}}function o(e){var t=function(e,t){if("object"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==n(t)?t:String(t)}var i=function(){function e(t,n,r,o,i,u,c){var a=c.handleCardClick,l=c.handleLikeButtonClick,s=c.handleDeleteClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.likes=o,this.isLikedByCurrentUser=i,this.name=t,this.link=n,this.templateSelector=r,this.isOwnedByUser=u,this._handleCardClick=a,this._handleLikeButtonClick=l,this._handleDeleteClick=s}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){var e=this.likes.length,t=document.querySelector(this.templateSelector).content.querySelector(".elements__container").cloneNode(!0);t.querySelector(".elements__text").textContent=this.name;var n=t.querySelector(".elements__heart");this.isLikedByCurrentUser&&n.classList.add("elements__black-heart"),t.querySelector(".elements__like").textContent=e<=0?"0":e;var r=t.querySelector(".elements__image");return r.src=this.link,r.alt=this.name,t}},{key:"setIsLikedByCurrentUser",value:function(e){this.isLikedByCurrentUser=e}},{key:"getIsLikedByCurrentUser",value:function(){return this.isLikedByCurrentUser}},{key:"_setEventListeners",value:function(){var e=this,t=this._cardElement.querySelector(".elements__image"),n=this._cardElement.querySelector(".elements__heart"),r=this._cardElement.querySelector(".elements__trash"),o=this._cardElement.querySelector(".elements__like");r.addEventListener("click",(function(){e._handleDeleteClick(e._cardElement)})),t.addEventListener("click",this._handleCardClick),n.addEventListener("click",(function(){n.classList.toggle("elements__black-heart"),e._handleLikeButtonClick(o)}))}},{key:"generateCard",value:function(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this.isOwnedByUser||this._cardElement.querySelector(".elements__trash").remove(),this._cardElement}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,a(r.key),r)}}function a(e){var t=function(e,t){if("object"!=u(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==u(t)?t:String(t)}var l=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.validationConfig=t,this.formElement=n}var t,n;return t=e,(n=[{key:"_hideInputError",value:function(e,t){var n=e.querySelector(t);n.textContent="",n.classList.remove(this.validationConfig.errorClass)}},{key:"_showInputError",value:function(e,t,n,r){var o=e.querySelector(t);o.textContent=r,o.classList.add(n.errorClass)}},{key:"_checkInputValidity",value:function(e,t){e.validity.valid?this._hideInputError(e.form,"#input__error-".concat(e.name),t):this._showInputError(e.form,"#input__error-".concat(e.name),this.validationConfig,e.validationMessage),this._toggleButton(e.form,t)}},{key:"_toggleButton",value:function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);n.every((function(e){return e.validity.valid}))?(r.disabled=!1,r.classList.remove(t.inactiveButtonClass)):(r.disabled=!0,r.classList.add(t.inactiveButtonClass))}},{key:"enableValidation",value:function(e){var t=this;Array.from(document.forms).forEach((function(e){e.addEventListener("submit",(function(e){e.preventDefault()})),Array.from(e.querySelectorAll(t.validationConfig.inputSelector)).forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e,t.validationConfig)}))})),t._toggleButton(e,t.validationConfig)}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,p(r.key),r)}}function p(e){var t=function(e,t){if("object"!=s(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==s(t)?t:String(t)}var y=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"addItem",value:function(e){this._container.appendChild(e)}},{key:"renderer",value:function(){var e=this;this.clear(),this._items.forEach((function(t){e._renderer(t)}))}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function m(e){var t=function(e,t){if("object"!=d(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:String(t)}var v=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupSelector=t,this._popupElement=document.querySelector("".concat(this.popupSelector)),this._popupCloseButton=this._popupElement.querySelector(".popup__close-button"),this._popupCloseOverlay=this._popupElement.querySelector(".popup__overlay"),this._handleEscClose=this._handleEscClose.bind(this),this.setEventListeners()}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_hide"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_hide"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupCloseButton.addEventListener("click",(function(){e.close()})),this._popupCloseOverlay.addEventListener("click",(function(){e.close()}))}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,S(r.key),r)}}function S(e){var t=function(e,t){if("object"!=b(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==b(t)?t:String(t)}function k(e,t,n){return t=C(t),function(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,w()?Reflect.construct(t,n||[],C(e).constructor):t.apply(e,n))}function w(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(w=function(){return!!e})()}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}var O=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=k(this,t,[e]))._popupImage=n._popupElement.querySelector(".popup__picture"),n._popupTitle=n._popupElement.querySelector(".popup__card-name"),n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e,n){this._popupImage.src=e,this._popupImage.alt=n,this._popupTitle.textContent=n,g(C(t.prototype),"open",this).call(this)}}])&&_(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(v);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e,t){if("object"!=j(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==j(t)?t:String(t)}function q(e,t,n){return t=I(t),function(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,B()?Reflect.construct(t,n||[],I(e).constructor):t.apply(e,n))}function B(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(B=function(){return!!e})()}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}var x=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=q(this,t,[e]))._submitCallBack=n,r}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(t,e),n=t,(r=[{key:"close",value:function(){this._popupElement.querySelector("form"),T(I(t.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var e={},t=this._popupElement.querySelector("form");return Array.from(t.querySelectorAll("input")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;T(I(t.prototype),"setEventListeners",this).call(this),this._popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e._submitCallBack(e._getInputValues()),e.close()}))}}])&&P(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(v);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,N(r.key),r)}}function N(e){var t=function(e,t){if("object"!=D(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:String(t)}var A=function(){function e(t,n){var r=t.userNameSelector,o=t.occupationSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(r),this._userOccupation=document.querySelector(o),this._userId}var t,n;return t=e,(n=[{key:"setUserId",value:function(e){this._userId=e}},{key:"getUserId",value:function(){return this._userId}},{key:"getUserInfo",value:function(){return{userName:this._userName.textContent,userOccupation:this._userOccupation.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;console.log(this.userName),this._userName.textContent=t,this._userOccupation.textContent=n}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,G(r.key),r)}}function G(e){var t=function(e,t){if("object"!=V(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==V(t)?t:String(t)}function H(e,t,n){return t=K(t),function(e,t){if(t&&("object"===V(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return z(e)}(e,M()?Reflect.construct(t,n||[],K(e).constructor):t.apply(e,n))}function M(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(M=function(){return!!e})()}function z(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},F.apply(this,arguments)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}function Q(e,t){return Q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Q(e,t)}var W=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=H(this,t,[e]))._handleConfirm=r._handleConfirm.bind(z(r)),r._handleClickConfirm=r._handleClickConfirm.bind(z(r)),r._api=n,r._buttonDelete=document.querySelector(".popup__save-button_delete"),r}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Q(e,t)}(t,e),n=t,(r=[{key:"_handleConfirm",value:function(e){e.preventDefault()}},{key:"_handleClickConfirm",value:function(){var e=this;this._buttonDelete.textContent="Eliminando...",this._api.deleteCard(this._idCard).then((function(){e._cardElement.remove(),e.close()}))}},{key:"openPopup",value:function(e,n){this._cardElement=n,F(K(t.prototype),"open",this).call(this),this._buttonDelete.textContent="Sí",this._idCard=e}},{key:"setEventListeners",value:function(){var e=this;F(K(t.prototype),"setEventListeners",this).call(this),this._popupElement.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e._handleClickConfirm()}))}}])&&J(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(v),X=(e.p,e.p,e.p,e.p,e.p,e.p,document.querySelector(".profile__picture-button")),Y=document.querySelector(".profile__button"),Z=document.querySelector(".profile__name"),$=document.querySelector(".profile__about-me"),ee=document.querySelector(".profile__picture"),te=(document.forms.edit,document.querySelector(".popup__input_name")),ne=document.querySelector(".popup__input_occupation"),re=(document.querySelector(".popup__input_title"),document.querySelector(".popup__input_link"),document.querySelector(".profile__add-button")),oe=document.querySelector(".elements"),ie=(document.querySelector(".elements__heart"),document.querySelector(".popup__content_add")),ue=document.querySelector(".popup__content"),ce=document.querySelector(".popup__save-button"),ae=document.querySelector(".popup__save-button_avatar"),le=document.querySelector(".popup__save-button_picture"),se=document.querySelector(".popup_profile-button"),fe=(document.querySelector(".popup__content_profile"),document.querySelector("#popup__avatar-input"));function pe(e){return pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pe(e)}function ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,de(r.key),r)}}function de(e){var t=function(e,t){if("object"!=pe(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=pe(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==pe(t)?t:String(t)}var he=new(function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t,this.headers=n}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"updateUser",value:function(e,t){return console.log("update user",e,t),fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){if(!e.ok)throw new Error("Error en servidor: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"updateAvatar",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){if(!e.ok)throw new Error("Error en servidor: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"addCard",value:function(e,t){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers,method:"POST",body:JSON.stringify({name:e,link:t})}).then((function(e){if(!e.ok)throw new Error("Error en servidor: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{headers:this.headers,method:"DELETE",body:JSON.stringify({idCard:e})}).then((function(e){if(!e.ok)throw new Error("Error en servidor: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"likeCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{headers:this.headers,method:"PUT",body:JSON.stringify({id:e})}).then((function(e){if(!e.ok)throw new Error("Error en servidor: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}},{key:"unlikeCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{headers:this.headers,method:"DELETE",body:JSON.stringify({id:e})}).then((function(e){if(!e.ok)throw new Error("Error en servidor: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error",e)}))}}])&&ye(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())("https://around.nomoreparties.co/v1/web_es_12",{authorization:"fa25d0a0-1783-4d33-9dd9-ca8f33a53e6d","Content-Type":"application/json"}),me=new W(".popup_erase-photo",he);Y.addEventListener("click",(function(){var e=ke.getUserInfo();te.value=e.userName,ne.value=e.userOccupation,ce.textContent="Guardar",be.open(),we.enableValidation()})),re.addEventListener("click",(function(){le.textContent="Crear",Se.open(),ge.enableValidation()})),X.addEventListener("click",(function(){_e.open(),ge.enableValidation()}));var ve=new O(".popup_image"),be=new x(".popup",(function(e){Z.textContent=e.name,$.textContent=ne.value,be.close()})),_e=new x(".popup_profile-button",(function(e){ee.src=e.link,_e.close()})),Se=new x(".popup_add-button",(function(e){le.textContent="Creando...",he.addCard(e.title,e.link).then((function(e){var t=new i(e.name,e.link,"#card-template",[],!1,!0,{handleCardClick:function(){ve.open(e.link,e.name)},handleLikeButtonClick:function(n){t.getIsLikedByCurrentUser()?he.unlikeCard(e._id).then((function(e){t.setIsLikedByCurrentUser(!1),n.textContent=e.likes.length})).catch((function(e){return console.warn(e)})):he.likeCard(e._id).then((function(e){t.setIsLikedByCurrentUser(!0),n.textContent=e.likes.length})).catch((function(e){return console.warn(e)}))},handleDeleteClick:function(t){me.openPopup(e._id,t)}});oe.prepend(t.generateCard())})).catch((function(e){console.warn("error:".concat(e.message))}))})),ke=new A({userNameSelector:".profile__name",occupationSelector:".profile__about-me"});he.getUserInfo().then((function(e){Z.textContent=e.name,$.textContent=e.about,ee.src=e.avatar,ee.alt=e.name,ke.setUserId(e._id)})).catch((function(e){console.warn("error:".concat(e.message))})),he.getInitialCards().then((function(e){var t=ke.getUserId(),n=new y({items:e,renderer:function(e){var r=t===e.owner._id,o=function(e,t){return!!e.find((function(e){return e._id===t}))}(e.likes,t),u=new i(e.name,e.link,"#card-template",e.likes,o,r,{handleCardClick:function(){ve.open(e.link,e.name)},handleLikeButtonClick:function(t){u.getIsLikedByCurrentUser()?he.unlikeCard(e._id).then((function(e){u.setIsLikedByCurrentUser(!1),t.textContent=e.likes.length})).catch((function(e){return console.warn(e)})):he.likeCard(e._id).then((function(e){u.setIsLikedByCurrentUser(!0),t.textContent=e.likes.length})).catch((function(e){return console.warn(e)}))},handleDeleteClick:function(t){me.openPopup(e._id,t)}});n.addItem(u.generateCard())}},".elements");n.renderer()})),new x(".popup",(function(e){ce.textContent="Guardando...",he.updateUser(e.name,e.occupation)})),se.addEventListener("submit",(function(e){e.preventDefault(),ae.textContent="Guardando...",he.updateAvatar(fe.value).then((function(e){ee.src=e.avatar,ee.alt="Avatar",ae.textContent="Guardar",fe.value=""})).catch((function(e){console.error("Error",e)}))}));var we=new l(t,ue);we.enableValidation();var ge=new l(t,ie);ge.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,